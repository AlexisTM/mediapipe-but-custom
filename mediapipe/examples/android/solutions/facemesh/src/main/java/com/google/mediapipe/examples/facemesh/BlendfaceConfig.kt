package com.google.mediapipe.examples.facemesh

data class BlendShapeConfig(val min: Float,val  max: Float, val name: String)
data class BlendShape(val value: Float, val name: String)

object LandmarkIndices {
    // The Mediapipe canonical points:
    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/face_geometry/data/canonical_face_model_uv_visualization.png
    val eyeRight = intArrayOf(33, 133, 160, 159, 158, 144, 145, 153)
    val eyeLeft = intArrayOf(263, 362, 387, 386, 385, 373, 374, 380)
    val head = intArrayOf(10, 152)
    val noseTip = intArrayOf(1)
    val uppestLip = intArrayOf(0)
    val upperLip = intArrayOf(13)
    val lowerLip = intArrayOf(14)
    val upperOuterLip = intArrayOf(12)
    val mouthCornerLeft = intArrayOf(291)
    val mouthCornerRight = intArrayOf(61)
    val lowestChin = intArrayOf(152)
    val upperHead = intArrayOf(10)
    val mouthFrownLeft = intArrayOf(422)
    val mouthFrownRight = intArrayOf(202)
    val mouthLeftStretch = intArrayOf(287)
    val mouthRightStretch = intArrayOf(57)
    val lowestLip = intArrayOf(17)
    val underLip = intArrayOf(18)
    val overUpperLip = intArrayOf(164)
    val leftUpperPress = intArrayOf(40, 80)
    val leftLowerPress = intArrayOf(88, 91)
    val rightUpperPress = intArrayOf(270, 310)
    val rightLowerPress = intArrayOf(318, 321)
    val squintLeft = intArrayOf(253, 450)
    val squintRight = intArrayOf(23, 230)
    val rightBrow = intArrayOf(27)
    val rightBrowLower = intArrayOf(53, 52, 65)
    val leftBrow = intArrayOf(257)
    val leftBrowLower = intArrayOf(283, 282, 295)
    val innerBrow = intArrayOf(9)
    val upperNose = intArrayOf(6)
    val cheekSquintLeft = intArrayOf(359, 342)
    val cheekSquintRight = intArrayOf(130, 113)
}

    // Found in https://github.com/JimWest/MeFaMo/blob/main/mefamo/blendshapes/blendshape_config.py
object BlendShapeConfigs {
    val EyeBlinkLeft = BlendShapeConfig(0.40f, 0.70f, "EyeBlinkLeft")
    val EyeLookDownLeft = BlendShapeConfig(-0.4f, 0.0f, "EyeLookDownLeft")
    val EyeLookInLeft = BlendShapeConfig(-0.4f, 0.0f, "EyeLookInLeft")
    val EyeLookOutLeft = BlendShapeConfig(-0.4f, 0.0f, "EyeLookOutLeft")
    val EyeLookUpLeft = BlendShapeConfig(-0.4f, 0.0f, "EyeLookUpLeft")
    val EyeSquintLeft = BlendShapeConfig(0.37f, 0.44f, "EyeSquintLeft")
    val EyeWideLeft = BlendShapeConfig(0.9f, 1.2f, "EyeWideLeft")
    val EyeBlinkRight = BlendShapeConfig(0.40f, 0.70f, "EyeBlinkRight")
    val EyeLookDownRight = BlendShapeConfig(-0.4f, 0.0f, "EyeLookDownRight")
    val EyeLookInRight = BlendShapeConfig(-0.4f, 0.0f, "EyeLookInRight")
    val EyeLookOutRight = BlendShapeConfig(-0.4f, 0.0f, "EyeLookOutRight")
    val EyeLookUpRight = BlendShapeConfig(-0.4f, 0.0f, "EyeLookUpRight")
    val EyeSquintRight = BlendShapeConfig(0.37f, 0.44f, "EyeSquintRight")
    val EyeWideRight = BlendShapeConfig(0.9f, 1.2f, "EyeWideRight")
    val JawForward = BlendShapeConfig(-0.4f, 0.0f, "JawForward")
    val JawLeft = BlendShapeConfig(-0.4f, 0.0f, "JawLeft")
    val JawRight = BlendShapeConfig(0.0f, 0.4f, "JawRight")
    val JawOpen = BlendShapeConfig(0.50f, 0.55f, "JawOpen")
    val MouthClose = BlendShapeConfig(3.0f, 4.5f, "MouthClose")
    val MouthFunnel = BlendShapeConfig(4.0f, 4.8f, "MouthFunnel")
    val MouthPucker = BlendShapeConfig(3.46f, 4.92f, "MouthPucker")
    val MouthLeft = BlendShapeConfig(-3.4f, -2.3f, "MouthLeft")
    val MouthRight = BlendShapeConfig( 1.5f, 3.0f, "MouthRight")
    val MouthSmileLeft = BlendShapeConfig(-0.25f, 0.0f, "MouthSmileLeft")
    val MouthSmileRight = BlendShapeConfig(-0.25f, 0.0f, "MouthSmileRight")
    val MouthFrownLeft = BlendShapeConfig(0.4f, 0.9f, "MouthFrownLeft")
    val MouthFrownRight = BlendShapeConfig(0.4f, 0.9f, "MouthFrownRight")
    val MouthDimpleLeft = BlendShapeConfig(-0.4f, 0.0f, "MouthDimpleLeft")
    val MouthDimpleRight = BlendShapeConfig(-0.4f, 0.0f, "MouthDimpleRight")
    val MouthStretchLeft = BlendShapeConfig(-0.4f, 0.0f, "MouthStretchLeft")
    val MouthStretchRight = BlendShapeConfig(-0.4f, 0.0f, "MouthStretchRight")
    val MouthRollLower = BlendShapeConfig(0.4f, 0.7f, "MouthRollLower")
    val MouthRollUpper = BlendShapeConfig(0.31f, 0.34f, "MouthRollUpper")
    val MouthShrugLower = BlendShapeConfig(1.9f, 2.3f, "MouthShrugLower")
    val MouthShrugUpper = BlendShapeConfig(1.4f, 2.4f, "MouthShrugUpper")
    val MouthPressLeft = BlendShapeConfig(0.4f, 0.5f, "MouthPressLeft")
    val MouthPressRight = BlendShapeConfig(0.4f, 0.5f, "MouthPressRight")
    val MouthLowerDownLeft = BlendShapeConfig(1.7f, 2.1f, "MouthLowerDownLeft")
    val MouthLowerDownRight = BlendShapeConfig(1.7f, 2.1f, "MouthLowerDownRight")
    val MouthUpperUpLeft = BlendShapeConfig(-0.4f, 0.0f, "MouthUpperUpLeft")
    val MouthUpperUpRight = BlendShapeConfig(-0.4f, 0.0f, "MouthUpperUpRight")
    val BrowDownLeft = BlendShapeConfig(1.0f, 1.2f, "BrowDownLeft")
    val BrowDownRight = BlendShapeConfig(1.0f, 1.2f, "BrowDownRight")
    val BrowInnerUp = BlendShapeConfig(2.2f, 2.6f, "BrowInnerUp")
    val BrowOuterUpLeft = BlendShapeConfig(1.25f, 1.5f, "BrowOuterUpLeft")
    val BrowOuterUpRight = BlendShapeConfig(1.25f, 1.5f, "BrowOuterUpRight")
    val CheekPuff = BlendShapeConfig(-0.4f, 0.0f, "CheekPuff")
    val CheekSquintLeft = BlendShapeConfig(0.55f, 0.63f, "CheekSquintLeft")
    val CheekSquintRight = BlendShapeConfig(0.55f, 0.63f, "CheekSquintRight")
    val NoseSneerLeft = BlendShapeConfig(-0.4f, 0.0f, "NoseSneerLeft")
    val NoseSneerRight = BlendShapeConfig(-0.4f, 0.0f, "NoseSneerRight")
    val TongueOut = BlendShapeConfig(-0.4f, 0.0f, "TongueOut")
    val HeadYaw = BlendShapeConfig(-0.4f, 0.0f, "HeadYaw")
    val HeadPitch = BlendShapeConfig(-0.4f, 0.0f, "HeadPitch")
    val HeadRoll = BlendShapeConfig(-0.4f, 0.0f, "HeadRoll")
    val LeftEyeYaw = BlendShapeConfig(-0.4f, 0.0f, "LeftEyeYaw")
    val LeftEyePitch = BlendShapeConfig(-0.4f, 0.0f, "LeftEyePitch")
    val LeftEyeRoll = BlendShapeConfig(-0.4f, 0.0f, "LeftEyeRoll")
    val RightEyeYaw = BlendShapeConfig(-0.4f, 0.0f, "RightEyeYaw")
    val RightEyePitch = BlendShapeConfig(-0.4f, 0.0f, "RightEyePitch")
    val RightEyeRoll = BlendShapeConfig(-0.4f, 0.0f, "RightEyeRoll")
}
